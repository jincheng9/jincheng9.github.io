<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>quiz on Jincheng9&#39;s blog</title>
    <link>http://jincheng9.github.io/tags/quiz/</link>
    <description>Recent content in quiz on Jincheng9&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 May 2022 23:31:07 +0800</lastBuildDate><atom:link href="http://jincheng9.github.io/tags/quiz/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go Quiz: 从Go面试题看变量的零值和初始化赋值的注意事项</title>
      <link>http://jincheng9.github.io/post/go-quiz-variable-init/</link>
      <pubDate>Thu, 05 May 2022 23:31:07 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-quiz-variable-init/</guid>
      <description>背景 Google工程师Valentin Deleplace出了1道关于变量初始化的题目，本来以为很简单，没想到回答正确率不到30%，拿出来和大</description>
    </item>
    
    <item>
      <title>Go Quiz: 从Go面试题看锁的注意事项</title>
      <link>http://jincheng9.github.io/post/go-quiz-mutex/</link>
      <pubDate>Sat, 12 Mar 2022 11:26:07 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-quiz-mutex/</guid>
      <description>背景 Google工程师Valentin Deleplace出了2道关于锁的题目，拿出来和大家分享下。 题目1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // quiz_lock1.go</description>
    </item>
    
    <item>
      <title>Go Quiz: 从Go面试题看函数命名返回值的注意事项</title>
      <link>http://jincheng9.github.io/post/go-quiz-named-return-parameter-with-closure/</link>
      <pubDate>Sun, 20 Feb 2022 12:18:34 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-quiz-named-return-parameter-with-closure/</guid>
      <description>题目 Redhat的首席工程师、Prometheus开源项目Maintainer Bartłomiej Płotka 在Twitter上出了一道Go</description>
    </item>
    
    <item>
      <title>Go Quiz: 从Go面试题看panic注意事项第1篇</title>
      <link>http://jincheng9.github.io/post/go-quiz-panic-1/</link>
      <pubDate>Mon, 07 Feb 2022 14:48:15 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-quiz-panic-1/</guid>
      <description>面试题 这是Go Quiz系列里关于panic的第1篇，主要考察同一个goroutine在多次panic场景下recover的机制。 1 2 3 4 5 6</description>
    </item>
    
    <item>
      <title>Go Quiz: Google工程师的Go语言题目</title>
      <link>http://jincheng9.github.io/post/go-quiz-cny-google-valentin/</link>
      <pubDate>Mon, 31 Jan 2022 15:49:46 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-quiz-cny-google-valentin/</guid>
      <description>面试题 Google工程师和Go语言布道者Valentin Deleplace会不定期分享一些Go语言的趣味题目。 我选取了最近的几道题目，给大家</description>
    </item>
    
    <item>
      <title>Go Quiz: 从Go面试题看defer的注意事项第3篇</title>
      <link>http://jincheng9.github.io/post/go-quiz-defer3/</link>
      <pubDate>Thu, 27 Jan 2022 22:40:17 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-quiz-defer3/</guid>
      <description>面试题 这是Go Quiz系列中关于defer的第3篇，这道题目来源于真实的互联网项目里，也是Go初学者容易犯的错误之一。 1 2 3 4 5 6 7 8 9 10 11</description>
    </item>
    
    <item>
      <title>Go Quiz: 从Go面试题看channel在select场景下的注意事项</title>
      <link>http://jincheng9.github.io/post/go-quiz-channel-select/</link>
      <pubDate>Sun, 23 Jan 2022 15:50:22 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-quiz-channel-select/</guid>
      <description>面试题 这是Go Quiz系列中关于channel的第2篇，涉及channel被close后的特性，以及在select和channel一起使用时</description>
    </item>
    
    <item>
      <title>Go Quiz: 从Go面试题搞懂slice range遍历的坑</title>
      <link>http://jincheng9.github.io/post/go-quiz-slice2/</link>
      <pubDate>Sat, 22 Jan 2022 16:16:10 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-quiz-slice2/</guid>
      <description>面试题 最近Go 101的作者发布了11道Go面试题，非常有趣，打算写一个系列对每道题做详细解析，欢迎大家关注。 本题是Go quiz slice系列的第2</description>
    </item>
    
    <item>
      <title>Go Quiz: 从Go面试题看defer的注意事项第2篇</title>
      <link>http://jincheng9.github.io/post/go-defer-quiz2/</link>
      <pubDate>Thu, 30 Dec 2021 22:19:11 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-defer-quiz2/</guid>
      <description>面试题 这是Go Quiz系列的第5篇，是考察Go语言的defer语义，也是defer语义的第2篇。 没有看过defer第1篇的可以先回顾下：Go</description>
    </item>
    
    <item>
      <title>Go Quiz: 从Go面试题看defer语义的底层原理和注意事项</title>
      <link>http://jincheng9.github.io/post/go-defer-quiz/</link>
      <pubDate>Wed, 29 Dec 2021 15:12:35 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-defer-quiz/</guid>
      <description>面试题 这是Go Quiz系列的第4篇，关于Go语言的defer语义。 这道题稍微有点迷惑性，通过这道题可以加深我们对Go语言defer关键字底层</description>
    </item>
    
    <item>
      <title>Go Quiz: 从Go面试题看分号规则和switch的注意事项</title>
      <link>http://jincheng9.github.io/post/go-switch-semicolons-quiz/</link>
      <pubDate>Tue, 28 Dec 2021 20:21:42 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-switch-semicolons-quiz/</guid>
      <description>面试题 这是Go Quiz系列的第3篇，关于Go语言的分号规则和switch的特性。 这道题比较tricky，通过这道题可以加深我们对Go语言里的</description>
    </item>
    
    <item>
      <title>Go Quiz: 从Go面试题看channel的注意事项</title>
      <link>http://jincheng9.github.io/post/go-channel-quiz/</link>
      <pubDate>Mon, 27 Dec 2021 19:11:12 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-channel-quiz/</guid>
      <description>面试题 这是Go Quiz系列的第2篇，关于channel和select的特性。 这道题比较简单，但是通过这道题可以加深我们对channel和se</description>
    </item>
    
    <item>
      <title>Go Quiz: 从Go面试题看slice的底层原理和注意事项</title>
      <link>http://jincheng9.github.io/post/go-slice-principle/</link>
      <pubDate>Sun, 26 Dec 2021 18:08:05 +0800</pubDate>
      
      <guid>http://jincheng9.github.io/post/go-slice-principle/</guid>
      <description>面试题 最近Go 101的作者发布了11道Go面试题，非常有趣，打算写一个系列对每道题做详细解析。欢迎大家关注。 大家可以看下面这道关于slice</description>
    </item>
    
  </channel>
</rss>
